<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skstravel.common.mapper.sksports2.SkOrderHotelMapper">
  <resultMap id="BaseResultMap" type="com.skstravel.common.model.sksports2.SkOrderHotel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="hotel_id" jdbcType="INTEGER" property="hotelId" />
    <result column="room_id" jdbcType="INTEGER" property="roomId" />
    <result column="room_num" jdbcType="INTEGER" property="roomNum" />
    <result column="goods_number" jdbcType="INTEGER" property="goodsNumber" />
    <result column="room_type" jdbcType="VARCHAR" property="roomType" />
    <result column="goods_price" jdbcType="REAL" property="goodsPrice" />
    <result column="hotel_start_date" jdbcType="DATE" property="hotelStartDate" />
    <result column="hotel_end_date" jdbcType="DATE" property="hotelEndDate" />
    <result column="people" jdbcType="INTEGER" property="people" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, hotel_id, room_id, room_num, goods_number, room_type, goods_price, 
    hotel_start_date, hotel_end_date, people
  </sql>
  <select id="selectByExample" parameterType="com.skstravel.common.model.sksports2.SkOrderHotelExample" resultMap="BaseResultMap">
    <include refid="pagePrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sk_order_hotel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="pageSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sk_order_hotel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sk_order_hotel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.skstravel.common.model.sksports2.SkOrderHotelExample">
    delete from sk_order_hotel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.skstravel.common.model.sksports2.SkOrderHotel">
    insert into sk_order_hotel (id, order_id, hotel_id, 
      room_id, room_num, goods_number, 
      room_type, goods_price, hotel_start_date, 
      hotel_end_date, people)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{hotelId,jdbcType=INTEGER}, 
      #{roomId,jdbcType=INTEGER}, #{roomNum,jdbcType=INTEGER}, #{goodsNumber,jdbcType=INTEGER}, 
      #{roomType,jdbcType=VARCHAR}, #{goodsPrice,jdbcType=REAL}, #{hotelStartDate,jdbcType=DATE}, 
      #{hotelEndDate,jdbcType=DATE}, #{people,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.skstravel.common.model.sksports2.SkOrderHotel">
    insert into sk_order_hotel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="hotelId != null">
        hotel_id,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="roomNum != null">
        room_num,
      </if>
      <if test="goodsNumber != null">
        goods_number,
      </if>
      <if test="roomType != null">
        room_type,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="hotelStartDate != null">
        hotel_start_date,
      </if>
      <if test="hotelEndDate != null">
        hotel_end_date,
      </if>
      <if test="people != null">
        people,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="hotelId != null">
        #{hotelId,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="roomNum != null">
        #{roomNum,jdbcType=INTEGER},
      </if>
      <if test="goodsNumber != null">
        #{goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="roomType != null">
        #{roomType,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=REAL},
      </if>
      <if test="hotelStartDate != null">
        #{hotelStartDate,jdbcType=DATE},
      </if>
      <if test="hotelEndDate != null">
        #{hotelEndDate,jdbcType=DATE},
      </if>
      <if test="people != null">
        #{people,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.skstravel.common.model.sksports2.SkOrderHotelExample" resultType="java.lang.Long">
    select count(*) from sk_order_hotel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sk_order_hotel
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.hotelId != null">
        hotel_id = #{record.hotelId,jdbcType=INTEGER},
      </if>
      <if test="record.roomId != null">
        room_id = #{record.roomId,jdbcType=INTEGER},
      </if>
      <if test="record.roomNum != null">
        room_num = #{record.roomNum,jdbcType=INTEGER},
      </if>
      <if test="record.goodsNumber != null">
        goods_number = #{record.goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="record.roomType != null">
        room_type = #{record.roomType,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsPrice != null">
        goods_price = #{record.goodsPrice,jdbcType=REAL},
      </if>
      <if test="record.hotelStartDate != null">
        hotel_start_date = #{record.hotelStartDate,jdbcType=DATE},
      </if>
      <if test="record.hotelEndDate != null">
        hotel_end_date = #{record.hotelEndDate,jdbcType=DATE},
      </if>
      <if test="record.people != null">
        people = #{record.people,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sk_order_hotel
    set id = #{record.id,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      hotel_id = #{record.hotelId,jdbcType=INTEGER},
      room_id = #{record.roomId,jdbcType=INTEGER},
      room_num = #{record.roomNum,jdbcType=INTEGER},
      goods_number = #{record.goodsNumber,jdbcType=INTEGER},
      room_type = #{record.roomType,jdbcType=VARCHAR},
      goods_price = #{record.goodsPrice,jdbcType=REAL},
      hotel_start_date = #{record.hotelStartDate,jdbcType=DATE},
      hotel_end_date = #{record.hotelEndDate,jdbcType=DATE},
      people = #{record.people,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.skstravel.common.model.sksports2.SkOrderHotel">
    update sk_order_hotel
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="hotelId != null">
        hotel_id = #{hotelId,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=INTEGER},
      </if>
      <if test="roomNum != null">
        room_num = #{roomNum,jdbcType=INTEGER},
      </if>
      <if test="goodsNumber != null">
        goods_number = #{goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="roomType != null">
        room_type = #{roomType,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        goods_price = #{goodsPrice,jdbcType=REAL},
      </if>
      <if test="hotelStartDate != null">
        hotel_start_date = #{hotelStartDate,jdbcType=DATE},
      </if>
      <if test="hotelEndDate != null">
        hotel_end_date = #{hotelEndDate,jdbcType=DATE},
      </if>
      <if test="people != null">
        people = #{people,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.skstravel.common.model.sksports2.SkOrderHotel">
    update sk_order_hotel
    set order_id = #{orderId,jdbcType=INTEGER},
      hotel_id = #{hotelId,jdbcType=INTEGER},
      room_id = #{roomId,jdbcType=INTEGER},
      room_num = #{roomNum,jdbcType=INTEGER},
      goods_number = #{goodsNumber,jdbcType=INTEGER},
      room_type = #{roomType,jdbcType=VARCHAR},
      goods_price = #{goodsPrice,jdbcType=REAL},
      hotel_start_date = #{hotelStartDate,jdbcType=DATE},
      hotel_end_date = #{hotelEndDate,jdbcType=DATE},
      people = #{people,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="pagePrefix">
    <if test="page != null">
      <if test="dialect == 'oracle'">
        select * from ( select row_.*, rownum rownum_ from ( 
      </if>
    </if>
  </sql>
  <sql id="pageSuffix">
    <if test="page != null">
      <if test="dialect == 'oracle'">
        <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= (#{page.start} + #{page.limit}) ]]>
      </if>
      <if test="dialect == 'mysql'">
        limit #{page.start} , #{page.limit}
      </if>
    </if>
  </sql>
</mapper>