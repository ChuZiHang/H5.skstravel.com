<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skstravel.common.mapper.sksports2.SkUserCouponMapper">
  <resultMap id="BaseResultMap" type="com.skstravel.common.model.sksports2.SkUserCoupon">
    <id column="user_coupon_id" jdbcType="INTEGER" property="userCouponId" />
    <result column="coupon_cluster_id" jdbcType="BIGINT" property="couponClusterId" />
    <result column="type_id" jdbcType="TINYINT" property="typeId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="coupon_id" jdbcType="BIGINT" property="couponId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_coupon_id, coupon_cluster_id, type_id, user_id, coupon_id, status, end_time, 
    create_time
  </sql>
  <select id="selectByExample" parameterType="com.skstravel.common.model.sksports2.SkUserCouponExample" resultMap="BaseResultMap">
    <include refid="pagePrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sk_user_coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="pageSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sk_user_coupon
    where user_coupon_id = #{userCouponId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sk_user_coupon
    where user_coupon_id = #{userCouponId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.skstravel.common.model.sksports2.SkUserCouponExample">
    delete from sk_user_coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.skstravel.common.model.sksports2.SkUserCoupon">
    insert into sk_user_coupon (user_coupon_id, coupon_cluster_id, type_id, 
      user_id, coupon_id, status, 
      end_time, create_time)
    values (#{userCouponId,jdbcType=INTEGER}, #{couponClusterId,jdbcType=BIGINT}, #{typeId,jdbcType=TINYINT}, 
      #{userId,jdbcType=INTEGER}, #{couponId,jdbcType=BIGINT}, #{status,jdbcType=TINYINT}, 
      #{endTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.skstravel.common.model.sksports2.SkUserCoupon">
    insert into sk_user_coupon
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userCouponId != null">
        user_coupon_id,
      </if>
      <if test="couponClusterId != null">
        coupon_cluster_id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="couponId != null">
        coupon_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userCouponId != null">
        #{userCouponId,jdbcType=INTEGER},
      </if>
      <if test="couponClusterId != null">
        #{couponClusterId,jdbcType=BIGINT},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="couponId != null">
        #{couponId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.skstravel.common.model.sksports2.SkUserCouponExample" resultType="java.lang.Long">
    select count(*) from sk_user_coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sk_user_coupon
    <set>
      <if test="record.userCouponId != null">
        user_coupon_id = #{record.userCouponId,jdbcType=INTEGER},
      </if>
      <if test="record.couponClusterId != null">
        coupon_cluster_id = #{record.couponClusterId,jdbcType=BIGINT},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=TINYINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.couponId != null">
        coupon_id = #{record.couponId,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sk_user_coupon
    set user_coupon_id = #{record.userCouponId,jdbcType=INTEGER},
      coupon_cluster_id = #{record.couponClusterId,jdbcType=BIGINT},
      type_id = #{record.typeId,jdbcType=TINYINT},
      user_id = #{record.userId,jdbcType=INTEGER},
      coupon_id = #{record.couponId,jdbcType=BIGINT},
      status = #{record.status,jdbcType=TINYINT},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.skstravel.common.model.sksports2.SkUserCoupon">
    update sk_user_coupon
    <set>
      <if test="couponClusterId != null">
        coupon_cluster_id = #{couponClusterId,jdbcType=BIGINT},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="couponId != null">
        coupon_id = #{couponId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_coupon_id = #{userCouponId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.skstravel.common.model.sksports2.SkUserCoupon">
    update sk_user_coupon
    set coupon_cluster_id = #{couponClusterId,jdbcType=BIGINT},
      type_id = #{typeId,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=INTEGER},
      coupon_id = #{couponId,jdbcType=BIGINT},
      status = #{status,jdbcType=TINYINT},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where user_coupon_id = #{userCouponId,jdbcType=INTEGER}
  </update>
  <sql id="pagePrefix">
    <if test="page != null">
      <if test="dialect == 'oracle'">
        select * from ( select row_.*, rownum rownum_ from ( 
      </if>
    </if>
  </sql>
  <sql id="pageSuffix">
    <if test="page != null">
      <if test="dialect == 'oracle'">
        <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= (#{page.start} + #{page.limit}) ]]>
      </if>
      <if test="dialect == 'mysql'">
        limit #{page.start} , #{page.limit}
      </if>
    </if>
  </sql>
</mapper>