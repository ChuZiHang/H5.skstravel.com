<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skstravel.common.mapper.sksports2.SkBatchInfoMapper">
  <resultMap id="BaseResultMap" type="com.skstravel.common.model.sksports2.SkBatchInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="batch_id" jdbcType="INTEGER" property="batchId" />
    <result column="game_id" jdbcType="INTEGER" property="gameId" />
    <result column="sche_id" jdbcType="INTEGER" property="scheId" />
    <result column="number_id" jdbcType="INTEGER" property="numberId" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="attr_id" jdbcType="INTEGER" property="attrId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="ticket_code" jdbcType="VARCHAR" property="ticketCode" />
    <result column="ticket_prefix" jdbcType="VARCHAR" property="ticketPrefix" />
    <result column="ticket_postfix" jdbcType="VARCHAR" property="ticketPostfix" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, batch_id, game_id, sche_id, number_id, number, attr_id, goods_id, ticket_code, 
    ticket_prefix, ticket_postfix, type
  </sql>
  <select id="selectByExample" parameterType="com.skstravel.common.model.sksports2.SkBatchInfoExample" resultMap="BaseResultMap">
    <include refid="pagePrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sk_batch_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="pageSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sk_batch_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sk_batch_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.skstravel.common.model.sksports2.SkBatchInfoExample">
    delete from sk_batch_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.skstravel.common.model.sksports2.SkBatchInfo">
    insert into sk_batch_info (id, batch_id, game_id, 
      sche_id, number_id, number, 
      attr_id, goods_id, ticket_code, 
      ticket_prefix, ticket_postfix, type
      )
    values (#{id,jdbcType=INTEGER}, #{batchId,jdbcType=INTEGER}, #{gameId,jdbcType=INTEGER}, 
      #{scheId,jdbcType=INTEGER}, #{numberId,jdbcType=INTEGER}, #{number,jdbcType=INTEGER}, 
      #{attrId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{ticketCode,jdbcType=VARCHAR}, 
      #{ticketPrefix,jdbcType=VARCHAR}, #{ticketPostfix,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.skstravel.common.model.sksports2.SkBatchInfo">
    insert into sk_batch_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="batchId != null">
        batch_id,
      </if>
      <if test="gameId != null">
        game_id,
      </if>
      <if test="scheId != null">
        sche_id,
      </if>
      <if test="numberId != null">
        number_id,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="attrId != null">
        attr_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="ticketCode != null">
        ticket_code,
      </if>
      <if test="ticketPrefix != null">
        ticket_prefix,
      </if>
      <if test="ticketPostfix != null">
        ticket_postfix,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="batchId != null">
        #{batchId,jdbcType=INTEGER},
      </if>
      <if test="gameId != null">
        #{gameId,jdbcType=INTEGER},
      </if>
      <if test="scheId != null">
        #{scheId,jdbcType=INTEGER},
      </if>
      <if test="numberId != null">
        #{numberId,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="attrId != null">
        #{attrId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="ticketCode != null">
        #{ticketCode,jdbcType=VARCHAR},
      </if>
      <if test="ticketPrefix != null">
        #{ticketPrefix,jdbcType=VARCHAR},
      </if>
      <if test="ticketPostfix != null">
        #{ticketPostfix,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.skstravel.common.model.sksports2.SkBatchInfoExample" resultType="java.lang.Long">
    select count(*) from sk_batch_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sk_batch_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.batchId != null">
        batch_id = #{record.batchId,jdbcType=INTEGER},
      </if>
      <if test="record.gameId != null">
        game_id = #{record.gameId,jdbcType=INTEGER},
      </if>
      <if test="record.scheId != null">
        sche_id = #{record.scheId,jdbcType=INTEGER},
      </if>
      <if test="record.numberId != null">
        number_id = #{record.numberId,jdbcType=INTEGER},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.attrId != null">
        attr_id = #{record.attrId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.ticketCode != null">
        ticket_code = #{record.ticketCode,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketPrefix != null">
        ticket_prefix = #{record.ticketPrefix,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketPostfix != null">
        ticket_postfix = #{record.ticketPostfix,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sk_batch_info
    set id = #{record.id,jdbcType=INTEGER},
      batch_id = #{record.batchId,jdbcType=INTEGER},
      game_id = #{record.gameId,jdbcType=INTEGER},
      sche_id = #{record.scheId,jdbcType=INTEGER},
      number_id = #{record.numberId,jdbcType=INTEGER},
      number = #{record.number,jdbcType=INTEGER},
      attr_id = #{record.attrId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      ticket_code = #{record.ticketCode,jdbcType=VARCHAR},
      ticket_prefix = #{record.ticketPrefix,jdbcType=VARCHAR},
      ticket_postfix = #{record.ticketPostfix,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.skstravel.common.model.sksports2.SkBatchInfo">
    update sk_batch_info
    <set>
      <if test="batchId != null">
        batch_id = #{batchId,jdbcType=INTEGER},
      </if>
      <if test="gameId != null">
        game_id = #{gameId,jdbcType=INTEGER},
      </if>
      <if test="scheId != null">
        sche_id = #{scheId,jdbcType=INTEGER},
      </if>
      <if test="numberId != null">
        number_id = #{numberId,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="attrId != null">
        attr_id = #{attrId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="ticketCode != null">
        ticket_code = #{ticketCode,jdbcType=VARCHAR},
      </if>
      <if test="ticketPrefix != null">
        ticket_prefix = #{ticketPrefix,jdbcType=VARCHAR},
      </if>
      <if test="ticketPostfix != null">
        ticket_postfix = #{ticketPostfix,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.skstravel.common.model.sksports2.SkBatchInfo">
    update sk_batch_info
    set batch_id = #{batchId,jdbcType=INTEGER},
      game_id = #{gameId,jdbcType=INTEGER},
      sche_id = #{scheId,jdbcType=INTEGER},
      number_id = #{numberId,jdbcType=INTEGER},
      number = #{number,jdbcType=INTEGER},
      attr_id = #{attrId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      ticket_code = #{ticketCode,jdbcType=VARCHAR},
      ticket_prefix = #{ticketPrefix,jdbcType=VARCHAR},
      ticket_postfix = #{ticketPostfix,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="pagePrefix">
    <if test="page != null">
      <if test="dialect == 'oracle'">
        select * from ( select row_.*, rownum rownum_ from ( 
      </if>
    </if>
  </sql>
  <sql id="pageSuffix">
    <if test="page != null">
      <if test="dialect == 'oracle'">
        <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= (#{page.start} + #{page.limit}) ]]>
      </if>
      <if test="dialect == 'mysql'">
        limit #{page.start} , #{page.limit}
      </if>
    </if>
  </sql>
</mapper>