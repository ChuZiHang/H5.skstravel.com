<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skstravel.common.mapper.sksports2.SkOrderPayLogMapper">
  <resultMap id="BaseResultMap" type="com.skstravel.common.model.sksports2.SkOrderPayLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo" />
    <result column="pay_type" jdbcType="SMALLINT" property="payType" />
    <result column="pay_fee" jdbcType="INTEGER" property="payFee" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="pay_status" jdbcType="TINYINT" property="payStatus" />
    <result column="return_data" jdbcType="VARCHAR" property="returnData" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, trade_no, pay_type, pay_fee, out_trade_no, user_id, pay_status, return_data, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.skstravel.common.model.sksports2.SkOrderPayLogExample" resultMap="BaseResultMap">
    <include refid="pagePrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sk_order_pay_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="pageSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sk_order_pay_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sk_order_pay_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.skstravel.common.model.sksports2.SkOrderPayLogExample">
    delete from sk_order_pay_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.skstravel.common.model.sksports2.SkOrderPayLog">
    insert into sk_order_pay_log (id, order_id, trade_no, 
      pay_type, pay_fee, out_trade_no, 
      user_id, pay_status, return_data, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{tradeNo,jdbcType=VARCHAR}, 
      #{payType,jdbcType=SMALLINT}, #{payFee,jdbcType=INTEGER}, #{outTradeNo,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{payStatus,jdbcType=TINYINT}, #{returnData,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.skstravel.common.model.sksports2.SkOrderPayLog">
    insert into sk_order_pay_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="tradeNo != null">
        trade_no,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="payFee != null">
        pay_fee,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="returnData != null">
        return_data,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=SMALLINT},
      </if>
      <if test="payFee != null">
        #{payFee,jdbcType=INTEGER},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="returnData != null">
        #{returnData,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.skstravel.common.model.sksports2.SkOrderPayLogExample" resultType="java.lang.Long">
    select count(*) from sk_order_pay_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sk_order_pay_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.tradeNo != null">
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=SMALLINT},
      </if>
      <if test="record.payFee != null">
        pay_fee = #{record.payFee,jdbcType=INTEGER},
      </if>
      <if test="record.outTradeNo != null">
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=TINYINT},
      </if>
      <if test="record.returnData != null">
        return_data = #{record.returnData,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sk_order_pay_log
    set id = #{record.id,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      pay_type = #{record.payType,jdbcType=SMALLINT},
      pay_fee = #{record.payFee,jdbcType=INTEGER},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      pay_status = #{record.payStatus,jdbcType=TINYINT},
      return_data = #{record.returnData,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.skstravel.common.model.sksports2.SkOrderPayLog">
    update sk_order_pay_log
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=SMALLINT},
      </if>
      <if test="payFee != null">
        pay_fee = #{payFee,jdbcType=INTEGER},
      </if>
      <if test="outTradeNo != null">
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="returnData != null">
        return_data = #{returnData,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.skstravel.common.model.sksports2.SkOrderPayLog">
    update sk_order_pay_log
    set order_id = #{orderId,jdbcType=INTEGER},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      pay_type = #{payType,jdbcType=SMALLINT},
      pay_fee = #{payFee,jdbcType=INTEGER},
      out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      pay_status = #{payStatus,jdbcType=TINYINT},
      return_data = #{returnData,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="pagePrefix">
    <if test="page != null">
      <if test="dialect == 'oracle'">
        select * from ( select row_.*, rownum rownum_ from ( 
      </if>
    </if>
  </sql>
  <sql id="pageSuffix">
    <if test="page != null">
      <if test="dialect == 'oracle'">
        <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= (#{page.start} + #{page.limit}) ]]>
      </if>
      <if test="dialect == 'mysql'">
        limit #{page.start} , #{page.limit}
      </if>
    </if>
  </sql>
</mapper>