<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skstravel.common.mapper.sksports2.SkQuestionPaper2018Mapper">
  <resultMap id="BaseResultMap" type="com.skstravel.common.model.sksports2.SkQuestionPaper2018">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="ticket_type_level" jdbcType="TINYINT" property="ticketTypeLevel" />
    <result column="vip_level_text" jdbcType="VARCHAR" property="vipLevelText" />
    <result column="number_id" jdbcType="INTEGER" property="numberId" />
    <result column="number_name" jdbcType="VARCHAR" property="numberName" />
    <result column="notes" jdbcType="VARCHAR" property="notes" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, realname, phone, email, ticket_type_level, vip_level_text, number_id, number_name, 
    notes, uid, create_time, ip
  </sql>
  <select id="selectByExample" parameterType="com.skstravel.common.model.sksports2.SkQuestionPaper2018Example" resultMap="BaseResultMap">
    <include refid="pagePrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sk_question_paper_2018
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="pageSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sk_question_paper_2018
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sk_question_paper_2018
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.skstravel.common.model.sksports2.SkQuestionPaper2018Example">
    delete from sk_question_paper_2018
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.skstravel.common.model.sksports2.SkQuestionPaper2018">
    insert into sk_question_paper_2018 (id, realname, phone, 
      email, ticket_type_level, vip_level_text, 
      number_id, number_name, notes, 
      uid, create_time, ip
      )
    values (#{id,jdbcType=INTEGER}, #{realname,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{ticketTypeLevel,jdbcType=TINYINT}, #{vipLevelText,jdbcType=VARCHAR}, 
      #{numberId,jdbcType=INTEGER}, #{numberName,jdbcType=VARCHAR}, #{notes,jdbcType=VARCHAR}, 
      #{uid,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{ip,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.skstravel.common.model.sksports2.SkQuestionPaper2018">
    insert into sk_question_paper_2018
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="ticketTypeLevel != null">
        ticket_type_level,
      </if>
      <if test="vipLevelText != null">
        vip_level_text,
      </if>
      <if test="numberId != null">
        number_id,
      </if>
      <if test="numberName != null">
        number_name,
      </if>
      <if test="notes != null">
        notes,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="ip != null">
        ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="ticketTypeLevel != null">
        #{ticketTypeLevel,jdbcType=TINYINT},
      </if>
      <if test="vipLevelText != null">
        #{vipLevelText,jdbcType=VARCHAR},
      </if>
      <if test="numberId != null">
        #{numberId,jdbcType=INTEGER},
      </if>
      <if test="numberName != null">
        #{numberName,jdbcType=VARCHAR},
      </if>
      <if test="notes != null">
        #{notes,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.skstravel.common.model.sksports2.SkQuestionPaper2018Example" resultType="java.lang.Long">
    select count(*) from sk_question_paper_2018
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sk_question_paper_2018
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketTypeLevel != null">
        ticket_type_level = #{record.ticketTypeLevel,jdbcType=TINYINT},
      </if>
      <if test="record.vipLevelText != null">
        vip_level_text = #{record.vipLevelText,jdbcType=VARCHAR},
      </if>
      <if test="record.numberId != null">
        number_id = #{record.numberId,jdbcType=INTEGER},
      </if>
      <if test="record.numberName != null">
        number_name = #{record.numberName,jdbcType=VARCHAR},
      </if>
      <if test="record.notes != null">
        notes = #{record.notes,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sk_question_paper_2018
    set id = #{record.id,jdbcType=INTEGER},
      realname = #{record.realname,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      ticket_type_level = #{record.ticketTypeLevel,jdbcType=TINYINT},
      vip_level_text = #{record.vipLevelText,jdbcType=VARCHAR},
      number_id = #{record.numberId,jdbcType=INTEGER},
      number_name = #{record.numberName,jdbcType=VARCHAR},
      notes = #{record.notes,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      ip = #{record.ip,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.skstravel.common.model.sksports2.SkQuestionPaper2018">
    update sk_question_paper_2018
    <set>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="ticketTypeLevel != null">
        ticket_type_level = #{ticketTypeLevel,jdbcType=TINYINT},
      </if>
      <if test="vipLevelText != null">
        vip_level_text = #{vipLevelText,jdbcType=VARCHAR},
      </if>
      <if test="numberId != null">
        number_id = #{numberId,jdbcType=INTEGER},
      </if>
      <if test="numberName != null">
        number_name = #{numberName,jdbcType=VARCHAR},
      </if>
      <if test="notes != null">
        notes = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.skstravel.common.model.sksports2.SkQuestionPaper2018">
    update sk_question_paper_2018
    set realname = #{realname,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      ticket_type_level = #{ticketTypeLevel,jdbcType=TINYINT},
      vip_level_text = #{vipLevelText,jdbcType=VARCHAR},
      number_id = #{numberId,jdbcType=INTEGER},
      number_name = #{numberName,jdbcType=VARCHAR},
      notes = #{notes,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="pagePrefix">
    <if test="page != null">
      <if test="dialect == 'oracle'">
        select * from ( select row_.*, rownum rownum_ from ( 
      </if>
    </if>
  </sql>
  <sql id="pageSuffix">
    <if test="page != null">
      <if test="dialect == 'oracle'">
        <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= (#{page.start} + #{page.limit}) ]]>
      </if>
      <if test="dialect == 'mysql'">
        limit #{page.start} , #{page.limit}
      </if>
    </if>
  </sql>
</mapper>