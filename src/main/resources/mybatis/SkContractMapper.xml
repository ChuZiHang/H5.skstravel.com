<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skstravel.common.mapper.sksports2.SkContractMapper">
  <resultMap id="BaseResultMap" type="com.skstravel.common.model.sksports2.SkContract">
    <id column="contract_id" jdbcType="INTEGER" property="contractId" />
    <result column="contract_name" jdbcType="VARCHAR" property="contractName" />
    <result column="addtime" jdbcType="TIMESTAMP" property="addtime" />
    <result column="hotel_id" jdbcType="CHAR" property="hotelId" />
    <result column="airticket_id" jdbcType="CHAR" property="airticketId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="contract_file" jdbcType="VARCHAR" property="contractFile" />
    <result column="combo_id" jdbcType="CHAR" property="comboId" />
    <result column="goods_id" jdbcType="CHAR" property="goodsId" />
    <result column="contract_type" jdbcType="BIT" property="contractType" />
    <result column="contract_no" jdbcType="CHAR" property="contractNo" />
    <result column="order_sn" jdbcType="CHAR" property="orderSn" />
    <result column="hotels" jdbcType="VARCHAR" property="hotels" />
    <result column="goods" jdbcType="VARCHAR" property="goods" />
    <result column="combos" jdbcType="VARCHAR" property="combos" />
    <result column="airtickets" jdbcType="VARCHAR" property="airtickets" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    contract_id, contract_name, addtime, hotel_id, airticket_id, user_id, contract_file, 
    combo_id, goods_id, contract_type, contract_no, order_sn, hotels, goods, combos, 
    airtickets
  </sql>
  <select id="selectByExample" parameterType="com.skstravel.common.model.sksports2.SkContractExample" resultMap="BaseResultMap">
    <include refid="pagePrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sk_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="pageSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sk_contract
    where contract_id = #{contractId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sk_contract
    where contract_id = #{contractId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.skstravel.common.model.sksports2.SkContractExample">
    delete from sk_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.skstravel.common.model.sksports2.SkContract">
    insert into sk_contract (contract_id, contract_name, addtime, 
      hotel_id, airticket_id, user_id, 
      contract_file, combo_id, goods_id, 
      contract_type, contract_no, order_sn, 
      hotels, goods, combos, 
      airtickets)
    values (#{contractId,jdbcType=INTEGER}, #{contractName,jdbcType=VARCHAR}, #{addtime,jdbcType=TIMESTAMP}, 
      #{hotelId,jdbcType=CHAR}, #{airticketId,jdbcType=CHAR}, #{userId,jdbcType=INTEGER}, 
      #{contractFile,jdbcType=VARCHAR}, #{comboId,jdbcType=CHAR}, #{goodsId,jdbcType=CHAR}, 
      #{contractType,jdbcType=BIT}, #{contractNo,jdbcType=CHAR}, #{orderSn,jdbcType=CHAR}, 
      #{hotels,jdbcType=VARCHAR}, #{goods,jdbcType=VARCHAR}, #{combos,jdbcType=VARCHAR}, 
      #{airtickets,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.skstravel.common.model.sksports2.SkContract">
    insert into sk_contract
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="contractId != null">
        contract_id,
      </if>
      <if test="contractName != null">
        contract_name,
      </if>
      <if test="addtime != null">
        addtime,
      </if>
      <if test="hotelId != null">
        hotel_id,
      </if>
      <if test="airticketId != null">
        airticket_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="contractFile != null">
        contract_file,
      </if>
      <if test="comboId != null">
        combo_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="contractType != null">
        contract_type,
      </if>
      <if test="contractNo != null">
        contract_no,
      </if>
      <if test="orderSn != null">
        order_sn,
      </if>
      <if test="hotels != null">
        hotels,
      </if>
      <if test="goods != null">
        goods,
      </if>
      <if test="combos != null">
        combos,
      </if>
      <if test="airtickets != null">
        airtickets,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="contractId != null">
        #{contractId,jdbcType=INTEGER},
      </if>
      <if test="contractName != null">
        #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="hotelId != null">
        #{hotelId,jdbcType=CHAR},
      </if>
      <if test="airticketId != null">
        #{airticketId,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="contractFile != null">
        #{contractFile,jdbcType=VARCHAR},
      </if>
      <if test="comboId != null">
        #{comboId,jdbcType=CHAR},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=CHAR},
      </if>
      <if test="contractType != null">
        #{contractType,jdbcType=BIT},
      </if>
      <if test="contractNo != null">
        #{contractNo,jdbcType=CHAR},
      </if>
      <if test="orderSn != null">
        #{orderSn,jdbcType=CHAR},
      </if>
      <if test="hotels != null">
        #{hotels,jdbcType=VARCHAR},
      </if>
      <if test="goods != null">
        #{goods,jdbcType=VARCHAR},
      </if>
      <if test="combos != null">
        #{combos,jdbcType=VARCHAR},
      </if>
      <if test="airtickets != null">
        #{airtickets,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.skstravel.common.model.sksports2.SkContractExample" resultType="java.lang.Long">
    select count(*) from sk_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sk_contract
    <set>
      <if test="record.contractId != null">
        contract_id = #{record.contractId,jdbcType=INTEGER},
      </if>
      <if test="record.contractName != null">
        contract_name = #{record.contractName,jdbcType=VARCHAR},
      </if>
      <if test="record.addtime != null">
        addtime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.hotelId != null">
        hotel_id = #{record.hotelId,jdbcType=CHAR},
      </if>
      <if test="record.airticketId != null">
        airticket_id = #{record.airticketId,jdbcType=CHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.contractFile != null">
        contract_file = #{record.contractFile,jdbcType=VARCHAR},
      </if>
      <if test="record.comboId != null">
        combo_id = #{record.comboId,jdbcType=CHAR},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=CHAR},
      </if>
      <if test="record.contractType != null">
        contract_type = #{record.contractType,jdbcType=BIT},
      </if>
      <if test="record.contractNo != null">
        contract_no = #{record.contractNo,jdbcType=CHAR},
      </if>
      <if test="record.orderSn != null">
        order_sn = #{record.orderSn,jdbcType=CHAR},
      </if>
      <if test="record.hotels != null">
        hotels = #{record.hotels,jdbcType=VARCHAR},
      </if>
      <if test="record.goods != null">
        goods = #{record.goods,jdbcType=VARCHAR},
      </if>
      <if test="record.combos != null">
        combos = #{record.combos,jdbcType=VARCHAR},
      </if>
      <if test="record.airtickets != null">
        airtickets = #{record.airtickets,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sk_contract
    set contract_id = #{record.contractId,jdbcType=INTEGER},
      contract_name = #{record.contractName,jdbcType=VARCHAR},
      addtime = #{record.addtime,jdbcType=TIMESTAMP},
      hotel_id = #{record.hotelId,jdbcType=CHAR},
      airticket_id = #{record.airticketId,jdbcType=CHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      contract_file = #{record.contractFile,jdbcType=VARCHAR},
      combo_id = #{record.comboId,jdbcType=CHAR},
      goods_id = #{record.goodsId,jdbcType=CHAR},
      contract_type = #{record.contractType,jdbcType=BIT},
      contract_no = #{record.contractNo,jdbcType=CHAR},
      order_sn = #{record.orderSn,jdbcType=CHAR},
      hotels = #{record.hotels,jdbcType=VARCHAR},
      goods = #{record.goods,jdbcType=VARCHAR},
      combos = #{record.combos,jdbcType=VARCHAR},
      airtickets = #{record.airtickets,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.skstravel.common.model.sksports2.SkContract">
    update sk_contract
    <set>
      <if test="contractName != null">
        contract_name = #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null">
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="hotelId != null">
        hotel_id = #{hotelId,jdbcType=CHAR},
      </if>
      <if test="airticketId != null">
        airticket_id = #{airticketId,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="contractFile != null">
        contract_file = #{contractFile,jdbcType=VARCHAR},
      </if>
      <if test="comboId != null">
        combo_id = #{comboId,jdbcType=CHAR},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=CHAR},
      </if>
      <if test="contractType != null">
        contract_type = #{contractType,jdbcType=BIT},
      </if>
      <if test="contractNo != null">
        contract_no = #{contractNo,jdbcType=CHAR},
      </if>
      <if test="orderSn != null">
        order_sn = #{orderSn,jdbcType=CHAR},
      </if>
      <if test="hotels != null">
        hotels = #{hotels,jdbcType=VARCHAR},
      </if>
      <if test="goods != null">
        goods = #{goods,jdbcType=VARCHAR},
      </if>
      <if test="combos != null">
        combos = #{combos,jdbcType=VARCHAR},
      </if>
      <if test="airtickets != null">
        airtickets = #{airtickets,jdbcType=VARCHAR},
      </if>
    </set>
    where contract_id = #{contractId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.skstravel.common.model.sksports2.SkContract">
    update sk_contract
    set contract_name = #{contractName,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      hotel_id = #{hotelId,jdbcType=CHAR},
      airticket_id = #{airticketId,jdbcType=CHAR},
      user_id = #{userId,jdbcType=INTEGER},
      contract_file = #{contractFile,jdbcType=VARCHAR},
      combo_id = #{comboId,jdbcType=CHAR},
      goods_id = #{goodsId,jdbcType=CHAR},
      contract_type = #{contractType,jdbcType=BIT},
      contract_no = #{contractNo,jdbcType=CHAR},
      order_sn = #{orderSn,jdbcType=CHAR},
      hotels = #{hotels,jdbcType=VARCHAR},
      goods = #{goods,jdbcType=VARCHAR},
      combos = #{combos,jdbcType=VARCHAR},
      airtickets = #{airtickets,jdbcType=VARCHAR}
    where contract_id = #{contractId,jdbcType=INTEGER}
  </update>
  <sql id="pagePrefix">
    <if test="page != null">
      <if test="dialect == 'oracle'">
        select * from ( select row_.*, rownum rownum_ from ( 
      </if>
    </if>
  </sql>
  <sql id="pageSuffix">
    <if test="page != null">
      <if test="dialect == 'oracle'">
        <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= (#{page.start} + #{page.limit}) ]]>
      </if>
      <if test="dialect == 'mysql'">
        limit #{page.start} , #{page.limit}
      </if>
    </if>
  </sql>
</mapper>