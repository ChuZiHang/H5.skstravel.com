<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skstravel.common.mapper.sksports2.SkCommentMapper">
  <resultMap id="BaseResultMap" type="com.skstravel.common.model.sksports2.SkComment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="comment_type" jdbcType="TINYINT" property="commentType" />
    <result column="id_value" jdbcType="INTEGER" property="idValue" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="comment_rank" jdbcType="BIT" property="commentRank" />
    <result column="add_time" jdbcType="INTEGER" property="addTime" />
    <result column="ip_address" jdbcType="VARCHAR" property="ipAddress" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.skstravel.common.model.sksports2.SkComment">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    comment_id, comment_type, id_value, email, user_name, comment_rank, add_time, ip_address, 
    status, parent_id, user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.skstravel.common.model.sksports2.SkCommentExample" resultMap="ResultMapWithBLOBs">
    <include refid="pagePrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sk_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="pageSuffix" />
  </select>
  <select id="selectByExample" parameterType="com.skstravel.common.model.sksports2.SkCommentExample" resultMap="BaseResultMap">
    <include refid="pagePrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sk_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="pageSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sk_comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sk_comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.skstravel.common.model.sksports2.SkCommentExample">
    delete from sk_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.skstravel.common.model.sksports2.SkComment">
    insert into sk_comment (comment_id, comment_type, id_value, 
      email, user_name, comment_rank, 
      add_time, ip_address, status, 
      parent_id, user_id, content
      )
    values (#{commentId,jdbcType=INTEGER}, #{commentType,jdbcType=TINYINT}, #{idValue,jdbcType=INTEGER}, 
      #{email,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{commentRank,jdbcType=BIT}, 
      #{addTime,jdbcType=INTEGER}, #{ipAddress,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{parentId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.skstravel.common.model.sksports2.SkComment">
    insert into sk_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="commentType != null">
        comment_type,
      </if>
      <if test="idValue != null">
        id_value,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="commentRank != null">
        comment_rank,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="ipAddress != null">
        ip_address,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="commentType != null">
        #{commentType,jdbcType=TINYINT},
      </if>
      <if test="idValue != null">
        #{idValue,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="commentRank != null">
        #{commentRank,jdbcType=BIT},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=INTEGER},
      </if>
      <if test="ipAddress != null">
        #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.skstravel.common.model.sksports2.SkCommentExample" resultType="java.lang.Long">
    select count(*) from sk_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sk_comment
    <set>
      <if test="record.commentId != null">
        comment_id = #{record.commentId,jdbcType=INTEGER},
      </if>
      <if test="record.commentType != null">
        comment_type = #{record.commentType,jdbcType=TINYINT},
      </if>
      <if test="record.idValue != null">
        id_value = #{record.idValue,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.commentRank != null">
        comment_rank = #{record.commentRank,jdbcType=BIT},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=INTEGER},
      </if>
      <if test="record.ipAddress != null">
        ip_address = #{record.ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update sk_comment
    set comment_id = #{record.commentId,jdbcType=INTEGER},
      comment_type = #{record.commentType,jdbcType=TINYINT},
      id_value = #{record.idValue,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      comment_rank = #{record.commentRank,jdbcType=BIT},
      add_time = #{record.addTime,jdbcType=INTEGER},
      ip_address = #{record.ipAddress,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sk_comment
    set comment_id = #{record.commentId,jdbcType=INTEGER},
      comment_type = #{record.commentType,jdbcType=TINYINT},
      id_value = #{record.idValue,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      comment_rank = #{record.commentRank,jdbcType=BIT},
      add_time = #{record.addTime,jdbcType=INTEGER},
      ip_address = #{record.ipAddress,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.skstravel.common.model.sksports2.SkComment">
    update sk_comment
    <set>
      <if test="commentType != null">
        comment_type = #{commentType,jdbcType=TINYINT},
      </if>
      <if test="idValue != null">
        id_value = #{idValue,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="commentRank != null">
        comment_rank = #{commentRank,jdbcType=BIT},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=INTEGER},
      </if>
      <if test="ipAddress != null">
        ip_address = #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.skstravel.common.model.sksports2.SkComment">
    update sk_comment
    set comment_type = #{commentType,jdbcType=TINYINT},
      id_value = #{idValue,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      comment_rank = #{commentRank,jdbcType=BIT},
      add_time = #{addTime,jdbcType=INTEGER},
      ip_address = #{ipAddress,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      parent_id = #{parentId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.skstravel.common.model.sksports2.SkComment">
    update sk_comment
    set comment_type = #{commentType,jdbcType=TINYINT},
      id_value = #{idValue,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      comment_rank = #{commentRank,jdbcType=BIT},
      add_time = #{addTime,jdbcType=INTEGER},
      ip_address = #{ipAddress,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      parent_id = #{parentId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <sql id="pagePrefix">
    <if test="page != null">
      <if test="dialect == 'oracle'">
        select * from ( select row_.*, rownum rownum_ from ( 
      </if>
    </if>
  </sql>
  <sql id="pageSuffix">
    <if test="page != null">
      <if test="dialect == 'oracle'">
        <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= (#{page.start} + #{page.limit}) ]]>
      </if>
      <if test="dialect == 'mysql'">
        limit #{page.start} , #{page.limit}
      </if>
    </if>
  </sql>
</mapper>