<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skstravel.common.mapper.sksports2.SkOrderGoodsCancelMapper">
  <resultMap id="BaseResultMap" type="com.skstravel.common.model.sksports2.SkOrderGoodsCancel">
    <id column="rec_id" jdbcType="INTEGER" property="recId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_sn" jdbcType="VARCHAR" property="goodsSn" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="goods_number" jdbcType="SMALLINT" property="goodsNumber" />
    <result column="market_price" jdbcType="DECIMAL" property="marketPrice" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="send_number" jdbcType="SMALLINT" property="sendNumber" />
    <result column="is_real" jdbcType="BIT" property="isReal" />
    <result column="extension_code" jdbcType="VARCHAR" property="extensionCode" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="is_gift" jdbcType="SMALLINT" property="isGift" />
    <result column="goods_attr_id" jdbcType="VARCHAR" property="goodsAttrId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.skstravel.common.model.sksports2.SkOrderGoodsCancelWithBLOBs">
    <result column="goods_attr" jdbcType="LONGVARCHAR" property="goodsAttr" />
    <result column="is_del" jdbcType="LONGVARCHAR" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    rec_id, order_id, goods_id, goods_name, goods_sn, product_id, goods_number, market_price, 
    goods_price, send_number, is_real, extension_code, parent_id, is_gift, goods_attr_id
  </sql>
  <sql id="Blob_Column_List">
    goods_attr, is_del
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.skstravel.common.model.sksports2.SkOrderGoodsCancelExample" resultMap="ResultMapWithBLOBs">
    <include refid="pagePrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sk_order_goods_cancel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="pageSuffix" />
  </select>
  <select id="selectByExample" parameterType="com.skstravel.common.model.sksports2.SkOrderGoodsCancelExample" resultMap="BaseResultMap">
    <include refid="pagePrefix" />
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sk_order_goods_cancel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="pageSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sk_order_goods_cancel
    where rec_id = #{recId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sk_order_goods_cancel
    where rec_id = #{recId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.skstravel.common.model.sksports2.SkOrderGoodsCancelExample">
    delete from sk_order_goods_cancel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.skstravel.common.model.sksports2.SkOrderGoodsCancelWithBLOBs">
    insert into sk_order_goods_cancel (rec_id, order_id, goods_id, 
      goods_name, goods_sn, product_id, 
      goods_number, market_price, goods_price, 
      send_number, is_real, extension_code, 
      parent_id, is_gift, goods_attr_id, 
      goods_attr, is_del)
    values (#{recId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, 
      #{goodsName,jdbcType=VARCHAR}, #{goodsSn,jdbcType=VARCHAR}, #{productId,jdbcType=INTEGER}, 
      #{goodsNumber,jdbcType=SMALLINT}, #{marketPrice,jdbcType=DECIMAL}, #{goodsPrice,jdbcType=DECIMAL}, 
      #{sendNumber,jdbcType=SMALLINT}, #{isReal,jdbcType=BIT}, #{extensionCode,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=INTEGER}, #{isGift,jdbcType=SMALLINT}, #{goodsAttrId,jdbcType=VARCHAR}, 
      #{goodsAttr,jdbcType=LONGVARCHAR}, #{isDel,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.skstravel.common.model.sksports2.SkOrderGoodsCancelWithBLOBs">
    insert into sk_order_goods_cancel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recId != null">
        rec_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsSn != null">
        goods_sn,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="goodsNumber != null">
        goods_number,
      </if>
      <if test="marketPrice != null">
        market_price,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="sendNumber != null">
        send_number,
      </if>
      <if test="isReal != null">
        is_real,
      </if>
      <if test="extensionCode != null">
        extension_code,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="isGift != null">
        is_gift,
      </if>
      <if test="goodsAttrId != null">
        goods_attr_id,
      </if>
      <if test="goodsAttr != null">
        goods_attr,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recId != null">
        #{recId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSn != null">
        #{goodsSn,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="goodsNumber != null">
        #{goodsNumber,jdbcType=SMALLINT},
      </if>
      <if test="marketPrice != null">
        #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="sendNumber != null">
        #{sendNumber,jdbcType=SMALLINT},
      </if>
      <if test="isReal != null">
        #{isReal,jdbcType=BIT},
      </if>
      <if test="extensionCode != null">
        #{extensionCode,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="isGift != null">
        #{isGift,jdbcType=SMALLINT},
      </if>
      <if test="goodsAttrId != null">
        #{goodsAttrId,jdbcType=VARCHAR},
      </if>
      <if test="goodsAttr != null">
        #{goodsAttr,jdbcType=LONGVARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.skstravel.common.model.sksports2.SkOrderGoodsCancelExample" resultType="java.lang.Long">
    select count(*) from sk_order_goods_cancel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sk_order_goods_cancel
    <set>
      <if test="record.recId != null">
        rec_id = #{record.recId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSn != null">
        goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsNumber != null">
        goods_number = #{record.goodsNumber,jdbcType=SMALLINT},
      </if>
      <if test="record.marketPrice != null">
        market_price = #{record.marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsPrice != null">
        goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.sendNumber != null">
        send_number = #{record.sendNumber,jdbcType=SMALLINT},
      </if>
      <if test="record.isReal != null">
        is_real = #{record.isReal,jdbcType=BIT},
      </if>
      <if test="record.extensionCode != null">
        extension_code = #{record.extensionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.isGift != null">
        is_gift = #{record.isGift,jdbcType=SMALLINT},
      </if>
      <if test="record.goodsAttrId != null">
        goods_attr_id = #{record.goodsAttrId,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsAttr != null">
        goods_attr = #{record.goodsAttr,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update sk_order_goods_cancel
    set rec_id = #{record.recId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=INTEGER},
      goods_number = #{record.goodsNumber,jdbcType=SMALLINT},
      market_price = #{record.marketPrice,jdbcType=DECIMAL},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      send_number = #{record.sendNumber,jdbcType=SMALLINT},
      is_real = #{record.isReal,jdbcType=BIT},
      extension_code = #{record.extensionCode,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      is_gift = #{record.isGift,jdbcType=SMALLINT},
      goods_attr_id = #{record.goodsAttrId,jdbcType=VARCHAR},
      goods_attr = #{record.goodsAttr,jdbcType=LONGVARCHAR},
      is_del = #{record.isDel,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sk_order_goods_cancel
    set rec_id = #{record.recId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=INTEGER},
      goods_number = #{record.goodsNumber,jdbcType=SMALLINT},
      market_price = #{record.marketPrice,jdbcType=DECIMAL},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      send_number = #{record.sendNumber,jdbcType=SMALLINT},
      is_real = #{record.isReal,jdbcType=BIT},
      extension_code = #{record.extensionCode,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      is_gift = #{record.isGift,jdbcType=SMALLINT},
      goods_attr_id = #{record.goodsAttrId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.skstravel.common.model.sksports2.SkOrderGoodsCancelWithBLOBs">
    update sk_order_goods_cancel
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSn != null">
        goods_sn = #{goodsSn,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="goodsNumber != null">
        goods_number = #{goodsNumber,jdbcType=SMALLINT},
      </if>
      <if test="marketPrice != null">
        market_price = #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsPrice != null">
        goods_price = #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="sendNumber != null">
        send_number = #{sendNumber,jdbcType=SMALLINT},
      </if>
      <if test="isReal != null">
        is_real = #{isReal,jdbcType=BIT},
      </if>
      <if test="extensionCode != null">
        extension_code = #{extensionCode,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="isGift != null">
        is_gift = #{isGift,jdbcType=SMALLINT},
      </if>
      <if test="goodsAttrId != null">
        goods_attr_id = #{goodsAttrId,jdbcType=VARCHAR},
      </if>
      <if test="goodsAttr != null">
        goods_attr = #{goodsAttr,jdbcType=LONGVARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where rec_id = #{recId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.skstravel.common.model.sksports2.SkOrderGoodsCancelWithBLOBs">
    update sk_order_goods_cancel
    set order_id = #{orderId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_sn = #{goodsSn,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=INTEGER},
      goods_number = #{goodsNumber,jdbcType=SMALLINT},
      market_price = #{marketPrice,jdbcType=DECIMAL},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      send_number = #{sendNumber,jdbcType=SMALLINT},
      is_real = #{isReal,jdbcType=BIT},
      extension_code = #{extensionCode,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      is_gift = #{isGift,jdbcType=SMALLINT},
      goods_attr_id = #{goodsAttrId,jdbcType=VARCHAR},
      goods_attr = #{goodsAttr,jdbcType=LONGVARCHAR},
      is_del = #{isDel,jdbcType=LONGVARCHAR}
    where rec_id = #{recId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.skstravel.common.model.sksports2.SkOrderGoodsCancel">
    update sk_order_goods_cancel
    set order_id = #{orderId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_sn = #{goodsSn,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=INTEGER},
      goods_number = #{goodsNumber,jdbcType=SMALLINT},
      market_price = #{marketPrice,jdbcType=DECIMAL},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      send_number = #{sendNumber,jdbcType=SMALLINT},
      is_real = #{isReal,jdbcType=BIT},
      extension_code = #{extensionCode,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      is_gift = #{isGift,jdbcType=SMALLINT},
      goods_attr_id = #{goodsAttrId,jdbcType=VARCHAR}
    where rec_id = #{recId,jdbcType=INTEGER}
  </update>
  <sql id="pagePrefix">
    <if test="page != null">
      <if test="dialect == 'oracle'">
        select * from ( select row_.*, rownum rownum_ from ( 
      </if>
    </if>
  </sql>
  <sql id="pageSuffix">
    <if test="page != null">
      <if test="dialect == 'oracle'">
        <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= (#{page.start} + #{page.limit}) ]]>
      </if>
      <if test="dialect == 'mysql'">
        limit #{page.start} , #{page.limit}
      </if>
    </if>
  </sql>
</mapper>